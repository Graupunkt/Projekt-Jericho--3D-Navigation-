{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1031{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.18362}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\tx3408\f0\fs22\lang7\par
    #GET LLH FROM XYZ ECEF\par
    #? Site = Wolf Point                $CurrentDestination = "Wolf Point Aid Shelter"\par
    #?ShiptoPlanet = 429,2km            $DistanceShipToPlanetAlignment = 429201,43878734217\par
    #?ShipToSite = 178,5km              $CurrentDistanceTotal = 178520,86564500318\par
    #!SiteToPlanet = ????               $DistancePoiToPlanet = 295063,48850753\par
    #?SiteX = -4.41978284451699         $PoiCoordDataX = "-4.41978284451699"\par
    #?SiteY = 279.066633187614          $PoiCoordDataY = "279.066633187614"\par
    #?SiteZ = 95.7326590587272          $PoiCoordDataZ = "95.7326590587272"\par
    #?SiteStantonX =                    $DestCoordDataX = -18930329482,02602\par
    #?SiteStantonY =                    $DestCoordDataY = -2609974989,6811805\par
    #?SiteStantonZ =                    $DestCoordDataZ = 95732,6590587272\par
    #?ShipStantonX =                    $CurrentXPosition = "-18930262707.175606"\par
    #?ShipStantonY =                    $CurrentYPosition = "-2610486156.324543"\par
    #?ShipStantonZ =                    $CurrentZPosition = "-85.636128"\par
    #?StartingMarker =                  $OMForAngles = "OM3"\par
    #?$UTCServerTime =                  $UTCServerTime =  Di. 29.12.2020 14:59:00\par
    #?Coords OM3 =                      Coordinates: x:-18930262707.175606 y:-2610486156.324543 z:-85.636128\par
    #!SiteLat = 18.932\par
    #!SiteLong = 0.907\par
    #!SiteAzimut = 64 (m)\par
    #!AngleX = 2\'b0\par
    #!AngleY = 32\'b0\par
    #Planet x+ to left, x- to right\par
    #Planet z+ to top, z- to bottm\par
    #Planet y+ to ship, yz behind the planet\par
\par
    #OTHER SITES TO VERIFY\par
    #Point of Interest      ShipToSiteDistance          AngleTurretX    AngelTurretY\par
    #Shubin SCD1            632km (behind the planet)   348\'b0            20\'b0\par
    #Wolf Point             177,2km                     2\'b0              32\'b0\par
    #Bountiful Harvest      691,6km                     354\'b0            -27\'b0\par
    #Mining Area 141        340,8km                     43              6\par
    #>\par
\par
    #########################################\par
    ### SET ANGLE AN ALIGNMENT FOR ANGLES ###\par
    #########################################\par
    \par
    if($DestCoordDataZ -gt 0)\{\par
        $NoseAlignTarget = "Planet Centre"\par
    \}\par
    else \{\par
        $NoseAlignTarget = "OM-2"\par
    \}\par
\par
    if($NoseAlignTarget -like "Planet Centre")\{\par
        $DistanceShipToPlanetAlignment = [math]::Sqrt([math]::pow(($CurrentXPosition - $FinalPlanetDataX),2) + [math]::pow(($CurrentYPosition - $FinalPlanetDataY),2) + [math]::pow(($CurrentZPosition - $FinalPlanetDataZ),2))\par
        $DistancePoiToPlanet = [math]::Sqrt([math]::pow($DestCoordDataX - ([double]$PlanetCoordDataX * 1000),2) + [math]::pow($DestCoordDataY - ([double]$PlanetCoordDataY * 1000),2) + [math]::pow($DestCoordDataZ - ([double]$PlanetCoordDataZ * 1000),2))\par
\par
        $ax = $DistanceShipToPlanetAlignment\par
        $bx = [math]::Sqrt([math]::pow($PoiCoordDataX,2) + [math]::pow($PoiCoordDataY,2)) * 1000\par
        $cx = [math]::Sqrt([math]::pow($DistanceShipToPlanetAlignment,2) + [math]::pow($ax,2))\par
        #"Wert0#" + [math]::Acos(([math]::pow($bx,2) - [math]::pow($ax,2) -[math]::pow($cx,2)) / (-2 * $ax * $cx)) * 180 / [Math]::Pi\par
\par
\par
        #if([int]$PoiCoordDataY -le 0)\{\par
            #"Wert1#" + (360 - [math]::Acos(([math]::pow($bx,2) - [math]::pow($ax,2) -[math]::pow($cx,2)) / (-2 * $ax * $cx)) * 180 / [Math]::Pi)\par
        #\}\par
        #else\{\par
            #$AlphaX9 = \par
           # "Wert2#" + [math]::Acos(([math]::pow($bx,2) - [math]::pow($ax,2) -[math]::pow($cx,2)) / (-2 * $ax * $cx)) * 180 / [Math]::Pi\par
        #\}\par
        \par
        #Shows 30,97\'b0 for Eager Flat\par
        #"Wert3#" + [math]::Acos(([math]::pow($ax,2) - [math]::pow($bx,2) -[math]::pow($cx,2)) / (-2 * $bx * $cx)) * 180 / [Math]::Pi  #Alpha\par
        #"Wert4#" + [math]::Acos(([math]::pow($bx,2) - [math]::pow($ax,2) -[math]::pow($cx,2)) / (-2 * $ax * $cx)) * 180 / [Math]::Pi  #Beta\par
        #"Wert5#" + [math]::Acos(([math]::pow($cx,2) - [math]::pow($ax,2) -[math]::pow($bx,2)) / (-2 * $ax * $bx)) * 180 / [Math]::Pi  #Gamma\par
\par
        #GET ANGLE VERTICALLY\par
        $a1 = $DestCoordDataZ\par
        $b1 = $DistanceShipToPlanetAlignment\par
        $c1 = [math]::Sqrt([math]::pow(($DestCoordDataZ),2) + [math]::pow(($DistanceShipToPlanetAlignment),2))\par
        #"Wert6#" + [math]::Sin($c1 / $a1) * 180 / [Math]::PI\par
        \par
\par
        #OM5 or OM6\par
        if($OMForAngles -like "OM5" -OR $OMForAngles -like "OM6")\{\par
            $a2 = ([Math]::Abs([double]$PoiCoordDataY * 1000))\par
            $b2 = $DistanceShipToPlanetAlignment - ([double]$PoiCoordDataX * 1000)\par
        \}\par
        \par
        #OM3 or OM4\par
        if($OMForAngles -like "OM3" -OR $OMForAngles -like "OM4")\{\par
            $a = ([Math]::Abs([double]$PoiCoordDataY * 1000))\par
            $b = $DistanceShipToPlanetAlignment - ([double]$PoiCoordDataY * 1000)\par
        \}\par
\par
        #GET RESULTING ANGLE\par
        $c2 = [math]::Sqrt([math]::pow(($a2),2) + [math]::pow(($b2),2))\par
        #"Wert7#" + [math]::Sin($c2 / $a2) * 180 / [Math]::PI\par
    \par
\par
                \par
                $a2 = ([Math]::Abs([double]$PoiCoordDataY * 1000)) #CHECK\par
                $Xdia = [math]::Sqrt([math]::pow($DistancePoiToPlanet,2) - [math]::pow([double]$PoiCoordDataY * 1000,2))\par
                $b2 = $DistanceShipToPlanetAlignment - ([double]$PoiCoordDataX * 1000)\par
                $c2 = [math]::Sqrt([math]::pow(($a2),2) + [math]::pow(($b2),2)) # below 426\par
                #"Wert8#" + [math]::Sin($c2 / $a2) * 180 / [Math]::PI\par
\par
                \par
                #$DistanceShipToPlanetAlignment\par
                #$DistancePoiToPlanet\par
                #$CurrentDistanceTotal\par
                \par
                # OM4 to Shubin X = 22\'b0, Y = 37\'b0\par
\par
        #$AlphaX\par
        #$AlphaX + 360\par
        #360 -$AlphaX\par
        #23 or 337\par
\par
        #OUTPUT ANGLE RESULTS\par
        #Write-Host "OM Startpunkt = $OMForAngles"\par
        #Write-Host "Distance to Planet = $DistanceShipToPlanetAlignment"\par
        #Write-Host "Distance to POI = $CurrentDistanceTotal"\par
        #Write-Host "Distance between POI and Planet = $DistancePoiToPlanet"\par
\par
        $ay = 11\par
        $by = 10\par
        $cy = 13\par
\par
        $ay = $DistancePoiToPlanet\par
        $by = $CurrentDistanceTotal\par
        $cy = $istanceShipToPlanetAlignment\par
        #"Wert1#" + [math]::Acos(([math]::pow($ay,2) - [math]::pow($by,2) -[math]::pow($cy,2)) / (-2 * $by * $cy)) * 180 / [Math]::Pi  #Alpha\par
        #"Wert2#" + [math]::Acos(([math]::pow($by,2) - [math]::pow($ay,2) -[math]::pow($cy,2)) / (-2 * $ay * $cy)) * 180 / [Math]::Pi  #Beta\par
        #"Wert3#" + [math]::Acos(([math]::pow($cy,2) - [math]::pow($ay,2) -[math]::pow($bx,2)) / (-2 * $ay * $by)) * 180 / [Math]::Pi  #Gamma\par
    \}\par
    elseif($NoseAlignTarget -like "OM-2")\{\par
        \par
    \}\par
\par
    if($DestCoordDataZ -gt 0)\{\par
        $NoseAlignTarget = "Planet Centre"\par
    \}\par
    else \{\par
        $NoseAlignTarget = "OM-2"\par
    \}\par
\par
    if($NoseAlignTarget -like "Planet Centre")\{\par
        $DistanceShipToPlanetAlignment = [math]::Sqrt([math]::pow(($CurrentXPosition - $FinalPlanetDataX),2) + [math]::pow(($CurrentYPosition - $FinalPlanetDataY),2) + [math]::pow(($CurrentZPosition - $FinalPlanetDataZ),2))\par
        $DistancePoiToPlanet = [math]::Sqrt([math]::pow($DestCoordDataX - ([double]$PlanetCoordDataX * 1000),2) + [math]::pow($DestCoordDataY - ([double]$PlanetCoordDataY * 1000),2) + [math]::pow($DestCoordDataZ - ([double]$PlanetCoordDataZ * 1000),2))\par
\par
        $ax = $DistanceShipToPlanetAlignment\par
        $bx = [math]::Sqrt([math]::pow($PoiCoordDataX,2) + [math]::pow($PoiCoordDataY,2)) * 1000\par
        $cx = [math]::Sqrt([math]::pow($DistanceShipToPlanetAlignment,2) + [math]::pow($ax,2))\par
        #"Wert0#" + [math]::Acos(([math]::pow($bx,2) - [math]::pow($ax,2) -[math]::pow($cx,2)) / (-2 * $ax * $cx)) * 180 / [Math]::Pi\par
\par
\par
        #if([int]$PoiCoordDataY -le 0)\{\par
            #"Wert1#" + (360 - [math]::Acos(([math]::pow($bx,2) - [math]::pow($ax,2) -[math]::pow($cx,2)) / (-2 * $ax * $cx)) * 180 / [Math]::Pi)\par
        #\}\par
        #else\{\par
            #$AlphaX9 = \par
           # "Wert2#" + [math]::Acos(([math]::pow($bx,2) - [math]::pow($ax,2) -[math]::pow($cx,2)) / (-2 * $ax * $cx)) * 180 / [Math]::Pi\par
        #\}\par
        \par
        #Shows 30,97\'b0 for Eager Flat\par
        #"Wert3#" + [math]::Acos(([math]::pow($ax,2) - [math]::pow($bx,2) -[math]::pow($cx,2)) / (-2 * $bx * $cx)) * 180 / [Math]::Pi  #Alpha\par
        #"Wert4#" + [math]::Acos(([math]::pow($bx,2) - [math]::pow($ax,2) -[math]::pow($cx,2)) / (-2 * $ax * $cx)) * 180 / [Math]::Pi  #Beta\par
        #"Wert5#" + [math]::Acos(([math]::pow($cx,2) - [math]::pow($ax,2) -[math]::pow($bx,2)) / (-2 * $ax * $bx)) * 180 / [Math]::Pi  #Gamma\par
\par
        #GET ANGLE VERTICALLY\par
        $a1 = $DestCoordDataZ\par
        $b1 = $DistanceShipToPlanetAlignment\par
        $c1 = [math]::Sqrt([math]::pow(($DestCoordDataZ),2) + [math]::pow(($DistanceShipToPlanetAlignment),2))\par
        #"Wert6#" + [math]::Sin($c1 / $a1) * 180 / [Math]::PI\par
        \par
\par
        #OM5 or OM6\par
        if($OMForAngles -like "OM5" -OR $OMForAngles -like "OM6")\{\par
            $a2 = ([Math]::Abs([double]$PoiCoordDataY * 1000))\par
            $b2 = $DistanceShipToPlanetAlignment - ([double]$PoiCoordDataX * 1000)\par
        \}\par
        \par
        #OM3 or OM4\par
        if($OMForAngles -like "OM3" -OR $OMForAngles -like "OM4")\{\par
            $a = ([Math]::Abs([double]$PoiCoordDataY * 1000))\par
            $b = $DistanceShipToPlanetAlignment - ([double]$PoiCoordDataY * 1000)\par
        \}\par
\par
        #GET RESULTING ANGLE\par
        $c2 = [math]::Sqrt([math]::pow(($a2),2) + [math]::pow(($b2),2))\par
        #"Wert7#" + [math]::Sin($c2 / $a2) * 180 / [Math]::PI\par
    \par
\par
                \par
                $a2 = ([Math]::Abs([double]$PoiCoordDataY * 1000)) #CHECK\par
                $Xdia = [math]::Sqrt([math]::pow($DistancePoiToPlanet,2) - [math]::pow([double]$PoiCoordDataY * 1000,2))\par
                $b2 = $DistanceShipToPlanetAlignment - ([double]$PoiCoordDataX * 1000)\par
                $c2 = [math]::Sqrt([math]::pow(($a2),2) + [math]::pow(($b2),2)) # below 426\par
                #"Wert8#" + [math]::Sin($c2 / $a2) * 180 / [Math]::PI\par
\par
                \par
                #$DistanceShipToPlanetAlignment\par
                #$DistancePoiToPlanet\par
                #$CurrentDistanceTotal\par
                \par
                # OM4 to Shubin X = 22\'b0, Y = 37\'b0\par
\par
        #$AlphaX\par
        #$AlphaX + 360\par
        #360 -$AlphaX\par
        #23 or 337\par
\par
        #OUTPUT ANGLE RESULTS\par
        #Write-Host "OM Startpunkt = $OMForAngles"\par
        #Write-Host "Distance to Planet = $DistanceShipToPlanetAlignment"\par
        #Write-Host "Distance to POI = $CurrentDistanceTotal"\par
        #Write-Host "Distance between POI and Planet = $DistancePoiToPlanet"\par
\par
        $ay = 11\par
        $by = 10\par
        $cy = 13\par
\par
        $ay = $DistancePoiToPlanet\par
        $by = $CurrentDistanceTotal\par
        $cy = $istanceShipToPlanetAlignment\par
        #"Wert1#" + [math]::Acos(([math]::pow($ay,2) - [math]::pow($by,2) -[math]::pow($cy,2)) / (-2 * $by * $cy)) * 180 / [Math]::Pi  #Alpha\par
        #"Wert2#" + [math]::Acos(([math]::pow($by,2) - [math]::pow($ay,2) -[math]::pow($cy,2)) / (-2 * $ay * $cy)) * 180 / [Math]::Pi  #Beta\par
        #"Wert3#" + [math]::Acos(([math]::pow($cy,2) - [math]::pow($ay,2) -[math]::pow($bx,2)) / (-2 * $ay * $by)) * 180 / [Math]::Pi  #Gamma\par
    \}\par
    elseif($NoseAlignTarget -like "OM-2")\{\par
        \par
    \}\par
\par
    $RevertedPlanetDataX = ($FinalPlanetDataX - $CurrentXPosition)\par
    $RevertedPlanetDataY = ($FinalPlanetDataY - $CurrentYPosition)\par
    $RevertedPlanetDataZ = ($FinalPlanetDataZ + $CurrentZPosition)\par
    $RevertedPlanetDataX = $RevertedPlanetDataX / 1000\par
    $RevertedPlanetDataY = $RevertedPlanetDataY / 1000\par
    $RevertedPlanetDataZ = $RevertedPlanetDataZ / 1000\par
}
 