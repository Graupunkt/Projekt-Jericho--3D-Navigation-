<File version="3.2">
  <FileID>bd1fe044-9806-4680-b309-8ae8d4f76326</FileID>
  <LastExport>133047337783347471</LastExport>
  <Preview>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
qT6b8qWmzl2mabMWa/46q4g1GyxtteV/Wqu379PXNs3nFsl8NmOhvpy9yAsoZi1Yri9mLrZoZo9W
bNyq6bOt0Z+/Ql98vdALMmYuXKpFtrJrdx3XaisrIiLi76FrVJdvPey9A7Bs8yFrcA9q9uo9evPd
D7R29SqtWb1ay5cs0RsjP9KSzUe84MDdAf9q0WbvbvmSDXssn2+03i6iJ89cqQ8+mKhPP52iiZ98
ro8++kQTpy/Whn1nLdCw5e04pnmrtmrqvPXe3YbFtix38Tt24kyNGfOBJn06VRMnfqZ/v/1B4st+
3t37Q5q9fLv33sD6vbacfae1fP2O1AUA+898ZxHDCZvplFZu3qMZkz7TF59OVt8PT6nh82f02ZxN
Wr9jvzYcOKvFqzZonq345sMWDCxbZwvfp9kLltkV/xottOBhtjXmM23YvcSwcOVGfTV/pRav22ZB
wnKttuhn0Yp1mm1X+/OWrvKec8xbZiu5bpcWLN+oeSts+nkrtXDNFs1ftUOLrDt36XoLKpZo5pIN
Wr37pNbt+UZrrayIiIi/h+v3nLDG+aimzdtgjfFR78p72daj+nDKfI18f4pGfzhN747/XJ9+vdx7
jO3SV1pD/vWSrZqxeJNWbD5gbdcZ7yp/yaZDeu+TGfro89n6eMocjfv4Ky20C2UXHKzZ5dq4k1po
F9ju8cEya9zdI/DVu77R57NX2XKmavzn8zRu4gx9OHlO0iP0o94t//mrdmnm0m3aeOCUNh08qxUb
dqYuADh09gev8d+43wqw45BWbbWr8E07NG7Kar02YaXmLlmrdTsPeekb9rkfDDqV6F7r33/aulZJ
FiHNt0Z93tp92mwFcLcxXNqaHUe8FVq3+7it4ElvOveDQxv3n9Lq7XZFbw16Yl5u+YnTr90dGHfS
G7d251EvD9d/fdmIiIi/g669cu3S1Lnrtcoa3BWu4d1ibZU1zK7Rdq513Z0nbPxhL81dyX+1cLNm
Ld9qw/utXTyrjZbX5gNntP3It9qW5Paj33rjNro20LWN1u4tXr9L0xdssu4+rbRAw+W5ZocLRlw5
EpflXOmV47C1t8c0Z9l2u7jeoS2HzmrrkQtatWl36gKAI+dlK3hGO45dkpVR1qv91j12UfrmsnTw
nLTPxu0780Ni2g391vXm+U7bDp2TBTiJw8ny+bH74/w3pKV6nJsfERHx99W1jet2n7FG+ZCWbjpy
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
uWncCdF96pExqd/l4x5JuD/dyOiZ+ufXbjp3InX5Zol35bFxSfO7Mrn8vWetNs6bPmlZrmwZ4xOX
5ca76TJZmdx0Lt17ecybP9bL86HKIepSJvFZc2ofT6RkIG93y3WQnVyLZbLyu/JZ2V05Xbnccl03
s5XPvaDl1iWjlSPwsparL2+9LS837MrutkN85hgNtkaiZu5Y71Zv8uXezsR6t33F+l3+3h+gWL/3
bNnK4W0b68ZZ2dw6uPK6evD+NCVpnkCZ3G9cuPK7RjRHDneVGayy2RIDoJSWnZJenra8LKa7snXb
xtV9BitHvKW55Xj7jKW7crtxrl5dOVyaK7vLx3vfxMrZy4LnB4pEe8+5A2m30+XltkXiOiVuE9fv
tkNgX3XLddO6Zbvt5x0HXr0k7ltuvpvzTW5MUn5uWvdOgVs/1++WlVivscpsw5lc3Vu/q/9s2WLU
paYFRhYMJeSM9Rrn1Aak3nYy3XoFxrmg3r14nCljYpDgyhAY76YNHCN/VN2ndu4FMXf73z0OuJO6
PN35zwUArpvS8tFf/qaXAI98K/UeOEx//5+/KSws7CeGhv7UkBTGJfdW6T83PqVl30r3Yk3geVhA
97vYzpuHbxgXEan0oVGJhiX+lvZ1Le2G4ZsM5JFavfksT6//NnlfN2m65PNfHw7klTQclLQOrv+3
6vJ0PxOaJsQCCuu6N5JTW+bkefxEyyOt5RmSVPZfYmD+68PJy5NS2ZKNuyGPmwysZ1iyvFPrzWXw
xt2smyZZ3j9JN934dFaGoPAfp0uNKeV13eRlS8mk9JTyvdnAPF5/SvkmrWNgmnBbD7c+zuCkdQqk
pcbAtNfzDwzbMm4eH0jzq+75vwsw3O1fAgB0/qYAYKtFAKs2bNec2bM1f/78P4VLly7Vww8/7K28
OxD+SLpfxktp/B/NP0s5A7ry/tHL/Ecr3x+hzv4Iy/+9y/CfXp77tU337JcAAJ2/KQBYv++Mzl76
QX829u3bp23btmnHjh1/GLdv367NmzenmPZH0pVz06ZNKab9Ud2yZYu2bt2aYtofwT9inf5v19kf
oU5+7zr4T6/zzp07dfjwYe8t9HTp0qXYIKC//E0BwIb9Z3Xi7OWkZlXatH6plu46kjSUyLlTe/Xx
p59p7eZDSWN+Jd9f0/dJvWfPntGvDTuuXbumkydP6vLly7p48aIuXbnqjf/uyiXrv6KrV68kjr9k
w8l04y5euqzvv/9ely9Z/y2muXLVyvn9d17/d999ryuB5dw07c1euHBBp06d8srlhhPz+s4rmyuz
4/trV/Wtjb948ZI3fO1y4nSXbR2+u/advrOyXUka5+VrXTe9N+3Vy/r228R+y0nfJ1XgxYvfevkl
L8vP+e23316vPzfsLT+pnN99d83KetXGJ5bx5nndtFetTr67lnIdp6ytw/VyW3lt+QFc/+3K7sp5
+vRp22fOJpU5Mb/AvnTtux/3pGtXUretvPVw9W3r6/q9ea4kbiO3TS5dTupPZX4p1Wkgv8uB/G+a
56cmbmu3Nq5+XZ4BfnOdeWVI3OeuuuPk8hVbRuK6pzS/p5vHuonHS7J9MpWmVCeB48Et29vPksoV
6H5nO7Urn3ec/vCDzZd4PH5n0/7S5Qfq4Ny5c0ll+G374c26beWOwe+/Szym3Th3Dki+zk6v3Fbf
jquXA8faD954V7+B6W7WpbvzQuBc5KZ1+TratWuntGnTptggoL+8owHAm89118B3JmrZ4oWaO3ee
Nu3eozef6KQmHfto/uKNFiAssfFztXn/EZ06vF9z583Vtr0HtHF54vidO/dq5ZJFmr9srS7YQbxz
wzqtXrVK2w4e1LRxT6hL76e1ddt+zZg9Uzv379HCefM0b/4iHT1zTpvWrfLyWLpxm86dPa1Na9dp
44YNOn7qXFLpEnGN6bFjx7yT27kLF3Vyz3o92WOotp+5qlP7tmnjph1e4+Aa0+9tWnfSuXTxgs6e
u6BvL5zWlm3brGx2EP7wvXeydSe3y+4kY9O7EaeO7tOuPQetcbiqHdu36vjpxBPF9+7kZAegCwrc
QSk7QX1rJ5fTp8/ozJkzXuN/9OhRr1xu+PyFSzqyZ62GDh+g1157TQOGDtCy3Ye9vHT1rD54b7y2
fZN4Qjp17JB27dunPbu268y3rnG9YA3td95J0NZYn054Ryu27NeVKxc18cUXNHjYC3ppxGC9NvHT
xEDKynPZC25+uF7Oy7buP9g6/WB5XLxw3jsZunK57pEjR34s57eXdHT7av17+HB9MOEjTfpsji5c
tpP+t+e9+r1ijaBr9N06u8bg0N7tOnDklHeivnI1cfwPVpeXrOF0ZXH16E7u16z8ro4vnDvr5fHJ
y8P17/FTvGknj31Bw18d7U3v1aXN407Agfm/v3rVypZYXldOt71PnDiRVObE/Oa8N0r9BzytV195
Ti+PHakPPxqndbuPutrw6s3VwTVr5L3yWZ6X7OTvGhi3/RzHD+7Snv1HbfiKt57Ht63U44/10Y6T
l3Xh2Db1fKyz1uw+5k3r6vSaq1PbT1JTp+cufKtjO9bq9efH6cjZi7Y/n7Oy2LaxOvnBynPR6tyy
9AKQC5bPFS/487akvvx0tOat2WbreFUfvzhUr30wzauzT0eP0NOvj/uZOrty6zqz5V84eVQjR7yl
bUdsux7fpZmrltueZdl4Zbpm28+dB37wAl5XFretr12+YMfrVp25YA2YO15sva/Y8eLq4zs3n5X/
ku13brwb/vY2+9nhLSv0su1nH9p+9tnkeTp/yW0LW5bN/8N3l7Vr+xadPGf726Uz2mHLvXTtex09
uEe7DyRuV+/Ys33j4kW3TOt329mGA/vnVdsvbq6Db775JqkMtt9cveTV6evX6/R5Pf3a2Ot16raN
O45cmbz92C4orphuH3bldw3w9XOFMXvKe5q5dL3N8623THcOSL7OXjnOf6uzh7Zr+FMvaP+5azq0
YbFGf/q1N7/bZpcuXfHK4tWt5e+tg9WdO7bOnzqiHTv36JqV66ytl8vX1XObNm0IANDzjgYAH418
Sm26dlDbPk9aYzxdXft304C2XTTk9YlaOPU9tev/pFauXKQeA3vo5ScG6rmRn2jt7E/VovWjNv1X
6ty5jeZYADDgsdYa++E0PdWjq3r16KIGbdrr7Zd7qkuf57R333E9Z41Xx55d9NqEr/XFuOfV54ne
eqhzVy8A6Nu/q4YM6aESxYqrftMWmrvtQFLpEkkeALiD8siOjWrfopFaD31Zh7dv06LZc7Xgq+n6
YPx7mjjja82cMUlrthzS+W8OaeOipRr54Xuas+BLjRo1Wu+89YaWrlqrxV9N0wfvv6dJsxfo43d6
q3b9+zV34Tp9+PH7mj57ht4bM0qjRr6juStWa8qnH2nU6DF66733tf3ICX17/tz1gz95AHDFrkzn
T35LpbsM9K4MhvdO0Ii3xmjimLGaOmO62jVvqr7Pv6XxEydp9rxZGjf+Vd1fr5IGPDNee3bv16zJ
k/S+rcNXC+aqT48H9dnCLbb2l9S/yn16++NN2rnsbbVq31Czvpyld0aN1cLli/T+uHc0etRIzVi2
Sku+mqp33TqOHqsNew57DZYr180n5kvWMK2fNVY5cubSY737WyP9qRZbXut3HtKhnWu0YMEiff3Z
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
8PLlid2b05OPu1168nG/pUz/iXRXTyml3zzu5vSlNp/revWTUnqyfte9I+lJZU1pnuT9txr3e6X/
6jr9mWl/dfqfpM7+E+lu33Tbwu2fKaUHuu6YvNU2u3na26XfPO526a57p9PdusyaNUtfffXVdWfM
mKEvv/zy+rDrTz7uVumB4UB6YNyt5v+rpicfl5p0569ND4xLbbrrpmb+jXu/0a4T135ZAHD0otS1
1wA3g/77v//b87/+67/0t7/9zesmH3e79MC4/3S6G/773//uDf/P//yPp+t34wLDgfTAuEB/YJ4/
e3rycalJdyZPD/TfKt0ZSL/VPH+29OTjUpPu/CXpgf7UzH/zPLdLd92/QnrycYHhn5s/pXGpTXfd
v2K68x//+Ifuvvtu7zGA86677tI///lPr5u8/9emB8b9p+b/ufTk41KT7rq/Nj15mX7r/MnnSSn9
t87/c+n3pEmT+Ajg3C98BHDsktS+W28vAEBERMQ/nzMWr9fB878iAOj4aN+fZIaIiIh/fN2d8a+X
bCAAQERE9JMEAIiIiD6UAAAREdGHEgAgIiL6UAIAREREH0oAgIiI6EMJABAREX0oAQAiIqIPJQBA
RET0oQQAiIiIPpQAABER0YcSACAiIvpQAgBEREQfSgCAiIjoQwkAEBERfSgBACIiog8lAEBERPSh
BACIiIg+lAAAERHRhxIAICIi+lACAERERB9KAICIiOhDCQAQERF9KAEAIiKiDyUAQERE9KEEAIiI
iD6UAAAREdGHEgAgIiL6UAIAREREH0oAgIiI6EMJABAREX0oAQAiIqIPJQBARET0oQQAiIiIPpQA
ABER0YcSACAiIvpQAgBEREQfSgCAiIjoQwkAEBERfSgBACIiog8lAEBERPShBACIiIg+lAAAERHR
hxIAICIi+lACAERERB9KAICIiOhDCQAQERF9KAEAIiKiDyUAQERE9KEEAIiIiD6UAAAREdGHEgAg
IiL6UAIAREREH0oAgIiI6EMJABAREX0oAQAiIqIPJQBARET0oQQAiIiIPpQAABER0YcSACAiIvpQ
AgBEREQfSgCAiIjoQwkAEBERfSgBACIiog8lAEBERPShBACIiIg+lAAAERHRhxIAICIi+lACAERE
RB9KAICIiOhDCQAQERF9KAEAIiKiDyUAQERE9KEEAIiIiD6UAAAREdGHEgAgIiL6UAIAREREH0oA
gIiI6EMJABAREX0oAQAiIqIPJQBARET0oQQAiIiIPpQAABER0YcSACAiIvpQAgBEREQfSgCAiIjo
QwkAEBERfSgBACIiog8lAEBERPShBACIiIg+lAAAERHRhxIAICIi+lACAERERB9KAICIiOhDCQAQ
ERF9KAEAIiKiDyUAQERE9KEEAIiIiD6UAAAREdGHEgAgIiL6UAIAREREH0oAgIiI6EMJABAREX0o
AQAiIqIPJQBARET0oQQAiIiIPpQAABER0YcSACAiIvpQAgBEREQfSgCAiIjoQwkAEBERfSgBACIi
og8lAEBERPShBACIiIg+lAAAERHRhxIAICIi+lACAERERB9KAICIiOhDCQAQERF9KAEAIiKiDyUA
QERE9KEEAIiIiD6UAAAREdGHEgAgIiL6UAIAREREH0oAgIiI6EMJABAREX0oAQAiIqIPJQBARET0
oQQAiIiIPpQAABER0YcSACAiIvpQAgBEREQfSgCAiIjoQwkAEBERfSgBACIiog8lAEBERPShBACI
iIg+lAAAERHRhxIAICIi+lACAERERB9KAICIiOhDCQAQERF9KAEAIiKiDyUAQERE9KEEAIiIiD6U
AAAREdGHEgAgIiL6UAIAREREH0oAgIiI6EMJABAREX0oAQAiIqIPJQBARET0oQQAiIiIPpQAABER
0YcSACAiIvpQAgBEREQfSgCAiIjoQwkAEBERfSgBACIiog8lAEBERPShBACIiIg+lAAAERHRhxIA
ICIi+lACAERERB9KAICIiOhDCQAQERF9KAEAIiKiDyUAQERE9KEEAIiIiD6UAAAREdGHEgAgIiL6
UAIAREREH0oAgIiI6EMJABAREX0oAQAiIqIPJQBARET0oQQAiIiIPpQAABER0YcSACAiIvpQAgBE
REQfSgCAiIjoQwkAEBERfSgBACIiog8lAEBERPShBACIiIg+lAAAERHRhxIAICIi+lACAERERB9K
AICIiOhDCQAQERF9KAEAIiKiDyUAQERE9KEEAIiIiD70VwcAJ65ID7Xv9pMMERER8c/hV4vW6ZC1
6b8oANhz8qrGT5yixx59VI899hgiIiL+iezRo4eWb96vvae++2UBwMb95/TN+asCAACAPyc7rUHf
fuzKLwsANh04rwPHz+rc2TM6cwYRERH/bG4/fE47jhMAICIi+koCAERERB9KAICIiOhDCQAQERF9
KAEAIiKijzx16pROnz5NAICIiOgXL1y4oF27dunAgQPaZQ06AQAiIuJfXNf47969W1u3btWhQ4cI
ABAREf/Knj17VqdPndJuu/J3jf+mjRt18CB3ABAREf/yumf+7ra/u/J33ePHj2vHkfO/PADYcvCc
th06px2Hz3kvESAiIuIfV9deuyv+gDut8Xdt+c7UBgD/fvWNySevypvBRQ07jiEiIuKfUdeW7zsj
bdxx+PYBwJBhw2fuOXxSa7fsQ0RExD+5m3Yd0eIV628fAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAwP8e/+f//P90zNYBg7gL+AAAAABJRU5ErkJggg==</Preview>
  <Form>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
AA==</Form>
  <Code><![CDATA[
$formProjectJericho_Load={
	#TODO: Initialize Form Controls here
	Write-Host "$($OrangeForeColor)- Pre Loading Main Application"
}

#region Control Helper Functions
<#
	.SYNOPSIS
		Sets the emulation of the WebBrowser control for the application.
	
	.DESCRIPTION
		Sets the emulation of the WebBrowser control for the application using the installed version of IE.
		This improves the WebBrowser control compatibility with newer html features.
	
	.PARAMETER ExecutableName
		The name of the executable E.g. PowerShellStudio.exe.
		Default Value: The running executable name.
	
	.EXAMPLE
		PS C:\> Set-WebBrowserEmulation

	.EXAMPLE
		PS C:\> Set-WebBrowserEmulation PowerShell.exe
#>
function Set-WebBrowserEmulation
{
	param
	(
		[ValidateNotNullOrEmpty()]
		[string]
		$ExecutableName = [System.IO.Path]::GetFileName([System.Diagnostics.Process]::GetCurrentProcess().MainModule.FileName)
	)
	
	#region Get IE Version
	$valueNames = 'svcVersion', 'svcUpdateVersion', 'Version', 'W2kVersion'
	
	$version = 0;
	for ($i = 0; $i -lt $valueNames.Length; $i++)
	{
		$objVal = [Microsoft.Win32.Registry]::GetValue('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer', $valueNames[$i], '0')
		$strVal = [System.Convert]::ToString($objVal)
		if ($strVal)
		{
			$iPos = $strVal.IndexOf('.')
			if ($iPos -gt 0)
			{
				$strVal = $strVal.Substring(0, $iPos)
			}
			
			$res = 0;
			if ([int]::TryParse($strVal, [ref]$res))
			{
				$version = [Math]::Max($version, $res)
			}
		}
	}
	
	if ($version -lt 7)
	{
		$version = 7000
	}
	else
	{
		$version = $version * 1000
	}
	#endregion
	
	[Microsoft.Win32.Registry]::SetValue('HKEY_CURRENT_USER\SOFTWARE\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_BROWSER_EMULATION', $ExecutableName, $version)
}



function Update-Chart
{
<#
    .SYNOPSIS
        This functions helps you plot points on a chart.
    
    .DESCRIPTION
        Use the function to plot points on a chart or add more charts to a chart control.
    
    .PARAMETER ChartControl
        The Chart Control you when to add points to.
    
    .PARAMETER XPoints
        Set the X Axis Points. These can be strings or numerical values.
    
    .PARAMETER YPoints
        Set the Y Axis Points. These can be strings or numerical values.
    
    .PARAMETER XTitle
        Set the Title for the X Axis.
    
    .PARAMETER YTitle
        Set the Title for the Y Axis.
    
    .PARAMETER Title
        Set the Title for the chart.
    
    .PARAMETER ChartType
        Set the Style of the chart. See System.Windows.Forms.DataVisualization.Charting.SeriesChartType Enum.
    
    .PARAMETER SeriesIndex
        Set the settings of a particular Series and corresponding ChartArea.
    
    .PARAMETER TitleIndex
        Set the settings of a particular Title.
    
    .PARAMETER SeriesName
        Set the settings of a particular Series using its name and corresponding ChartArea.
        The Series will be created if not found.
        If SeriesIndex is set, it will replace the Series' name if the Series does not exist.
    
    .PARAMETER Enable3D
        The chart will be rendered in 3D.
    
    .PARAMETER Disable3D
        The chart will be rendered in 2D.
    
    .PARAMETER AppendNew
        When this switch is used, a new ChartArea is added to Chart Control.
    
    .NOTES
        Additional information about the function.
    
    .LINK
        http://www.sapien.com/blog/2011/05/05/primalforms-2011-designing-charts-for-powershell/
#>
	
	param
	(
		[Parameter(Mandatory = $true, Position = 1)]
		[ValidateNotNull()]
		[System.Windows.Forms.DataVisualization.Charting.Chart]$ChartControl,
		[Parameter(Mandatory = $true, Position = 2)]
		[ValidateNotNull()]
		$XPoints,
		[Parameter(Mandatory = $true, Position = 3)]
		[ValidateNotNull()]
		$YPoints,
		[Parameter(Mandatory = $false, Position = 4)]
		[string]$XTitle,
		[Parameter(Mandatory = $false, Position = 5)]
		[string]$YTitle,
		[Parameter(Mandatory = $false, Position = 6)]
		[string]$Title,
		[Parameter(Mandatory = $false, Position = 7)]
		[System.Windows.Forms.DataVisualization.Charting.SeriesChartType]$ChartType,
		[Parameter(Mandatory = $false, Position = 8)]
		[int]$SeriesIndex = -1,
		[Parameter(Mandatory = $false, Position = 9)]
		[int]$TitleIndex = 0,
		[Parameter(Mandatory = $false)]
		[string]$SeriesName = $null,
		[switch]$Enable3D,
		[switch]$Disable3D,
		[switch]$AppendNew
	)
	
	$ChartAreaIndex = 0
	if ($AppendNew)
	{
		$name = "ChartArea " + ($ChartControl.ChartAreas.Count + 1).ToString();
		$ChartArea = $ChartControl.ChartAreas.Add($name)
		$ChartAreaIndex = $ChartControl.ChartAreas.Count - 1
		
		$name = "Series " + ($ChartControl.Series.Count + 1).ToString();
		$Series = $ChartControl.Series.Add($name)
		$SeriesIndex = $ChartControl.Series.Count - 1
		
		$Series.ChartArea = $ChartArea.Name
	}
	else
	{
		if ($ChartControl.ChartAreas.Count -eq 0)
		{
			$name = "ChartArea " + ($ChartControl.ChartAreas.Count + 1).ToString();
			[void]$ChartControl.ChartAreas.Add($name)
			$ChartAreaIndex = $ChartControl.ChartAreas.Count - 1
		}
		
		if ($ChartControl.Series.Count -eq 0)
		{
			if (-not $SeriesName)
			{
				$SeriesName = "Series " + ($ChartControl.Series.Count + 1).ToString();
			}
			
			$Series = $ChartControl.Series.Add($SeriesName)
			$SeriesIndex = $ChartControl.Series.Count - 1
			$Series.ChartArea = $ChartControl.ChartAreas[$ChartAreaIndex].Name
		}
		elseif ($SeriesName)
		{
			$Series = $ChartControl.Series.FindByName($SeriesName)
			
			if ($null -eq $Series)
			{
				if (($SeriesIndex -gt -1) -and ($SeriesIndex -lt $ChartControl.Series.Count))
				{
					$Series = $ChartControl.Series[$SeriesIndex]
					$Series.Name = $SeriesName
				}
				else
				{
					$Series = $ChartControl.Series.Add($SeriesName)
					$SeriesIndex = $ChartControl.Series.Count - 1
				}
				
				$Series.ChartArea = $ChartControl.ChartAreas[$ChartAreaIndex].Name
			}
			else
			{
				$SeriesIndex = $ChartControl.Series.IndexOf($Series)
				$ChartAreaIndex = $ChartControl.ChartAreas.IndexOf($Series.ChartArea)
			}
		}
	}
	
	if (($SeriesIndex -lt 0) -or ($SeriesIndex -ge $ChartControl.Series.Count))
	{
		$SeriesIndex = 0
	}
	
	$Series = $ChartControl.Series[$SeriesIndex]
	$Series.Points.Clear()
	$ChartArea = $ChartControl.ChartAreas[$Series.ChartArea]
	
	if ($Enable3D)
	{
		$ChartArea.Area3DStyle.Enable3D = $true
	}
	elseif ($Disable3D)
	{
		$ChartArea.Area3DStyle.Enable3D = $false
	}
	
	if ($Title)
	{
		if ($ChartControl.Titles.Count -eq 0)
		{
			#$name = "Title " + ($ChartControl.Titles.Count + 1).ToString();
			$TitleObj = $ChartControl.Titles.Add($Title)
			$TitleIndex = $ChartControl.Titles.Count - 1
			$TitleObj.DockedToChartArea = $ChartArea.Name
			$TitleObj.IsDockedInsideChartArea = $false
		}
		
		$ChartControl.Titles[$TitleIndex].Text = $Title
	}
	
	if ($ChartType)
	{
		$Series.ChartType = $ChartType
	}
	
	if ($XTitle)
	{
		$ChartArea.AxisX.Title = $XTitle
	}
	
	if ($YTitle)
	{
		$ChartArea.AxisY.Title = $YTitle
	}
	
	if ($XPoints -isnot [Array] -or $XPoints -isnot [System.Collections.IEnumerable])
	{
		$array = New-Object System.Collections.ArrayList
		$array.Add($XPoints)
		$XPoints = $array
	}
	
	if ($YPoints -isnot [Array] -or $YPoints -isnot [System.Collections.IEnumerable])
	{
		$array = New-Object System.Collections.ArrayList
		$array.Add($YPoints)
		$YPoints = $array
	}
	
	$Series.Points.DataBindXY($XPoints, $YPoints)
}



function Clear-Chart
{
<#
	.SYNOPSIS
		This function clears the contents of the chart.

	.DESCRIPTION
		Use the function to remove contents from the chart control.

	.PARAMETER  ChartControl
		The Chart Control to clear.

	.PARAMETER  LeaveSingleChart
		Leaves the first chart and removes all others from the control.
	
	.LINK
		http://www.sapien.com/blog/2011/05/05/primalforms-2011-designing-charts-for-powershell/
#>
	Param (	
	[ValidateNotNull()]
	[Parameter(Position=1,Mandatory=$true)]
  	[System.Windows.Forms.DataVisualization.Charting.Chart]$ChartControl
	,
	[Parameter(Position=2, Mandatory=$false)]
	[Switch]$LeaveSingleChart
	)
	
	$count = 0	
	if($LeaveSingleChart)
	{
		$count = 1
	}
	
	while($ChartControl.Series.Count -gt $count)
	{
		$ChartControl.Series.RemoveAt($ChartControl.Series.Count - 1)
	}
	
	while($ChartControl.ChartAreas.Count -gt $count)
	{
		$ChartControl.ChartAreas.RemoveAt($ChartControl.ChartAreas.Count - 1)
	}
	
	while($ChartControl.Titles.Count -gt $count)
	{
		$ChartControl.Titles.RemoveAt($ChartControl.Titles.Count - 1)
	}
	
	if($ChartControl.Series.Count -gt 0)
	{
		$ChartControl.Series[0].Points.Clear()
	}
}



function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	if ($DisplayMember)
	{
		$ListBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}



function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($null -eq $Item)
	{
		$DataGridView.DataSource = $null
	}
	elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}



function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterCIMProperties
			This switch removes CIM properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterCIMProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($null -eq $InputObject)
	{
		$Table.Clear()
		return @( ,$Table)
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterCIMProperties -or -not $prop.Name.StartsWith('__')) #filter out CIM properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)
}



function Show-NotifyIcon
{
<#
	.SYNOPSIS
		Displays a NotifyIcon's balloon tip message in the taskbar's notification area.
	
	.DESCRIPTION
		Displays a NotifyIcon's a balloon tip message in the taskbar's notification area.
		
	.PARAMETER NotifyIcon
     	The NotifyIcon control that will be displayed.
	
	.PARAMETER BalloonTipText
     	Sets the text to display in the balloon tip.
	
	.PARAMETER BalloonTipTitle
		Sets the Title to display in the balloon tip.
	
	.PARAMETER BalloonTipIcon	
		The icon to display in the ballon tip.
	
	.PARAMETER Timeout	
		The time the ToolTip Balloon will remain visible in milliseconds. 
		Default: 0 - Uses windows default.
#>
	 param(
	  [Parameter(Mandatory = $true, Position = 0)]
	  [ValidateNotNull()]
	  [System.Windows.Forms.NotifyIcon]$NotifyIcon,
	  [Parameter(Mandatory = $true, Position = 1)]
	  [ValidateNotNullOrEmpty()]
	  [String]$BalloonTipText,
	  [Parameter(Position = 2)]
	  [String]$BalloonTipTitle = '',
	  [Parameter(Position = 3)]
	  [System.Windows.Forms.ToolTipIcon]$BalloonTipIcon = 'None',
	  [Parameter(Position = 4)]
	  [int]$Timeout = 0
 	)
	
	if($null -eq $NotifyIcon.Icon)
	{
		#Set a Default Icon otherwise the balloon will not show
		$NotifyIcon.Icon = [System.Drawing.Icon]::ExtractAssociatedIcon([System.Windows.Forms.Application]::ExecutablePath)
	}
	
	$NotifyIcon.ShowBalloonTip($Timeout, $BalloonTipTitle, $BalloonTipText, $BalloonTipIcon)
}



#endregion


$buttonShowLocationHotKey_Click = {
	
	if ($buttonShowLocationHotKey.ForeColor -eq [System.Drawing.Color]::FromArgb(50, 250, 50))
	{
		Stop-Process -Name "Script_Showlocation_Hotkey ALT-GR or LEFTCTRL+ALT_RunAsAdmin" -Force
		$buttonShowLocationHotKey.ForeColor = [System.Drawing.Color]::FromArgb(250, 50, 50)
	}
	else
	{
		Start-Process "$script:ScriptDir\Script_Showlocation_Hotkey ALT-GR or LEFTCTRL+ALT_RunAsAdmin.exe"
		$buttonShowLocationHotKey.ForeColor = [System.Drawing.Color]::FromArgb(50, 250, 50)
	}
}

$buttonAntiLogoffScript_Click = {

	#CHECK TOGGLE STATE (IF GREEN OR NOT)
	if ($buttonAntiLogoffScript.ForeColor -eq [System.Drawing.Color]::FromArgb(50, 250, 50))
	{
		Stop-Process -Name "AntiLogoffScript_V3" -Force
		$buttonAntiLogoffScript.ForeColor = [System.Drawing.Color]::FromArgb(250, 50, 50)
	}
	else
	{
		Start-Process "$script:ScriptDir\AntiLogoffScript_V3.exe"
		$buttonAntiLogoffScript.ForeColor = [System.Drawing.Color]::FromArgb(50, 250, 50)
	}
}

$buttonClearStarCitizenCach_Click={
	Clear-CacheSC
	$buttonClearStarCitizenCach.ForeColor = [System.Drawing.Color]::FromArgb(50, 250, 50)
}

$buttonToggleIngameOverlay_Click = {
	
	if ($global:RunspaceOverlay.RunspaceStateInfo.State)
	{
		Start-Process "msg" -argumentlist "* runspace is open"
		$RunspaceOverlay.CloseAsync()
		$RunspaceOverlay.Dispose()
		#
		$pOverlay.Close()
		$pOverlay.Dispose()
		#
		$formIngameOverlay.Close()
	}
	else
	{
		Start-Process "msg" -argumentlist "* runspace not detected"
	}
}

$label1013061_Click={
	$global:exitflag = $true
}


$buttonAutoRunToggle_Click={
	if ($buttonAutoRunToggle.ForeColor -eq [System.Drawing.Color]::FromArgb(50, 250, 50))
	{
		Stop-Process -Name "AutorunToggle" -Force
		$buttonAutoRunToggle.ForeColor = [System.Drawing.Color]::FromArgb(250, 50, 50)
	}
	else
	{
		Start-Process "$script:ScriptDir\AutorunToggle.exe"
		$buttonAutoRunToggle.ForeColor = [System.Drawing.Color]::FromArgb(50, 250, 50)
	}
}

$buttonSelect_Click={
	$global:ShowPoiSelection = $true
}

$labelPlayerDayCondition_Click={
	#TODO: Place custom script here
	
}

$labelHourAngleDest_Click={
	#TODO: Place custom script here
	
}

$buttonDebugMode_Click={
	if ($buttonDebugMode.ForeColor -eq [System.Drawing.Color]::FromArgb(50, 250, 50))
	{
		$global:debug = $false
		$buttonDebugMode.ForeColor = [System.Drawing.Color]::FromArgb(250, 50, 50)
	}
	else
	{
		$global:debug = $true
		$buttonDebugMode.ForeColor = [System.Drawing.Color]::FromArgb(50, 250, 50)
	}
}

$datagridview2_CellContentClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	
}

$datagridview1_CellContentClick=[System.Windows.Forms.DataGridViewCellEventHandler]{
#Event Argument: $_ = [System.Windows.Forms.DataGridViewCellEventArgs]
	#TODO: Place custom script here
	
}

$tabcontrol1_Click={
	#TODO: Place custom script here
	
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies />
</File>